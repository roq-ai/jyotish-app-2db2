generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model astrologer {
  id              String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  chart           chart[]
}

model chart {
  id                     String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id            String     @db.Uuid
  astrologer_id          String     @db.Uuid
  divisional_chart       String     @db.VarChar(255)
  planetary_combinations String     @db.VarChar(255)
  created_at             DateTime   @default(now()) @db.Timestamp(6)
  updated_at             DateTime   @default(now()) @db.Timestamp(6)
  astrologer             astrologer @relation(fields: [astrologer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer               customer   @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id     String   @db.Uuid
  birth_time  DateTime @db.Timestamp(6)
  birth_date  DateTime @db.Date
  birth_place String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  chart       chart[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?      @db.VarChar(255)
  image       String?      @db.VarChar(255)
  name        String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user_id     String       @db.Uuid
  tenant_id   String       @db.VarChar(255)
  astrologer  astrologer[]
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  astrologer   astrologer[]
  customer     customer[]
  organization organization[]
}
